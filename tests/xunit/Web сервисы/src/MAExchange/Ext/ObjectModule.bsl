#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем КонтекстЯдра; // ядро xunit
Перем Утверждения; // модуль asserts (БазовыеУтверждения)
Перем Ожидаем; // модуль BDD ( УтвержденияBDD);
Перем ГенерацияДанных; // модуль (СериализаторMXL)

// Расположение плагинов по умолчанию
// C:\Program Files\OneScript\lib\add\plugins

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура - Инициализация
//
// Параметры:
//  КонтекстЯдраПараметр - ядро xunit	 - 
//
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения"); // 
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	ГенерацияДанных = КонтекстЯдра.Плагин("СериализаторMXL");

КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт	
	
	НаборТестов.НачатьГруппу("Тестирование операций");
	НаборТестов.Добавить("Тест_ПолучитьДанные");	
	
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	НачатьТранзакцию();
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли; 	
КонецПроцедуры

#КонецОбласти

#Область ЮнитТесты


Процедура Тест_ПолучитьДанные() Экспорт 
		
	СтруктураДанных = ГенерацияДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "Ссылки");
	
	// очиска старых данных
	ПланыОбмена.УдалитьРегистрациюИзменений(СтруктураДанных.ДЕМО);	

	Константы.УчетПоСкладам.Установить(Не Константы.УчетПоСкладам.Получить());
	
	ПланыОбмена.ЗарегистрироватьИзменения(СтруктураДанных.ДЕМО, Константы.УчетПоСкладам); 

	ПакетОбмена = ОбменМобильныеОбщее.СформироватьПакетОбмена(СтруктураДанных.ДЕМО);

	Ожидаем.Что(ПакетОбмена).ИмеетТип(Тип("ХранилищеЗначения"));
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытий
// Код процедур и функций
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыеПараметрыАвторизации()
	
	ПараметрыАвторизации = Новый Структура;
	ПараметрыАвторизации.Вставить("Пользователь", "Администратор");
	ПараметрыАвторизации.Вставить("Пароль", "123");
	
	Возврат ПараметрыАвторизации;
	
КонецФункции

Функция НовыеПараметрыWS()
	
	ПараметрыWS = Новый Структура;
	ПараметрыWS.Вставить("МестоположениеWSDL", "http://localhost/Platform8Demo/ws/ws1.1cws?wsdl"); // http://localhost/Platform8Demo/ws/ws1.1cws?wsdl
	ПараметрыWS.Вставить("URIПространстваИменСервиса", "http://localhost/ws1"); // http://localhost/ws1
	ПараметрыWS.Вставить("ИмяСервиса", "MAExchange"); // "MAExchange" 
	ПараметрыWS.Вставить("ИмяТочкиПодключения", "MAExchangeSoap"); // "MAExchange"
	ПараметрыWS.Вставить("Таймаут", 30); // 30 сек.

	
	Возврат ПараметрыWS;
	
КонецФункции

#КонецОбласти

#Область Инициализация

#КонецОбласти
    
#Иначе
 ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли