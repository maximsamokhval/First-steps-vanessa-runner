#Область ОписаниеПеременных

Перем КонтекстЯдра; // ядро xunit
Перем Ожидаем; // модуль BDD ( УтвержденияBDD);
Перем ГенерацияДанных; // модуль (СериализаторMXL)
Перем ДвиженияДокумента; // модуль (ДвиженияДокумента)

// Расположение плагинов по умолчанию
// C:\Program Files\OneScript\lib\add\plugins

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция КлючНастройки() Экспорт
	Возврат "ПроведениеДокументов";
КонецФункции


// Процедура - Инициализация
//
// Параметры:
//  КонтекстЯдраПараметр - ядро xunit	 - 
//
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	ГенерацияДанных = КонтекстЯдра.Плагин("СериализаторMXL");
	ДвиженияДокумента = КонтекстЯдра.Плагин("ДвиженияДокумента");
	
	ЗагрузитьНастройки(); // 

	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт	
	
	НаборТестов.НачатьГруппу("Тестирование движений");
	НаборТестов.Добавить("ПроверитьДвижения", "Тест должен проверить, что движения не изменились");	
	
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	НачатьТранзакцию();
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли; 	
КонецПроцедуры


#КонецОбласти

#Область ЮнитТесты

Процедура ПроверитьДвижения() Экспорт 
	
	СтруктураДанных = ГенерацияДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "Ссылки");
	
	ПриходОбъект = СтруктураДанных["ПриходСсылка"].ПолучитьОбъект();
	ПриходОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	
	
КонецПроцедуры

#КонецОбласти

#Область Настройки

Процедура ЗагрузитьНастройки()
	
	Если ЗначениеЗаполнено(Настройки) Тогда
		Возврат;
	КонецЕсли;

    ПлагинНастройки = КонтекстЯдра.Плагин("Настройки");
    ПлагинНастройки.Инициализация(КонтекстЯдра);
    
    Настройки = ПлагинНастройки.ПолучитьНастройку(КлючНастройки());
	
	НастройкиПоУмолчанию = НастройкиПоУмолчанию();
    Если ТипЗнч(Настройки) <> Тип("Структура") Then
        Настройки = НастройкиПоУмолчанию;
	Иначе
		ЗаполнитьЗначенияСвойств(НастройкиПоУмолчанию, Настройки);
        Настройки = НастройкиПоУмолчанию;
	КонецЕсли;
	
КонецПроцедуры

Функция НастройкиПоУмолчанию()
	
	Результат = Новый Структура;
	
	Результат.Вставить("Используется", Истина);
	Результат.Вставить("КоличествоДокументов", 10);
	Результат.Вставить("Исключения", Новый Массив);
	
	Возврат Результат;
	
КонецФункции

Функция НужноВыполнятьТест()
	
	ЗагрузитьНастройки();
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Возврат Истина;
	КонецЕсли;
	
	КлючНастройки = КлючНастройки();
	
	ВыполнятьТест = Истина;
	Если ТипЗнч(Настройки) = Тип("Структура") 
		И Настройки.Свойство("Используется", ВыполнятьТест) Тогда
		
		Возврат ВыполнятьТест = Истина;	
		
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти

#Область Инициализация

#КонецОбласти
