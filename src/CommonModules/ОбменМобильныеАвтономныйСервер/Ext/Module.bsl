#Если МобильныйАвтономныйСервер Тогда
// Сервисная функция для начальной инициализации БД, проверяет что синхронизация данных ранее не проводилась
Функция ДанныеДляПроверки() Экспорт
    
    СтруктураВозврата = Новый Структура();
    СтруктураВозврата.Вставить("КодУзлаОбмена", ПланыОбмена.Мобильные.ЭтотУзел().Код);
	Возврат СтруктураВозврата;
    
КонецФункции

// Сервисная функция для получения константы
&НаСервере
Функция ПринятоОтправленоНовыхЗаписей() Экспорт
	
    СтруктураВозврата = Новый Структура();
    СтруктураВозврата.Вставить("Принято", Константы.ПринятоЗаписей.Получить());
    СтруктураВозврата.Вставить("Отправлено", Константы.ОтправленоЗаписей.Получить());
	Возврат СтруктураВозврата;

КонецФункции

// Процедура выполняет синхронизацию данных с основной базой. через опубликованный ею веб-сервис
Процедура ВыполнитьОбменДанными() Экспорт
	
	НаименованиеУзла = ПользователиИнформационнойБазы.ТекущийПользователь().Имя + " - Автономный узел";
    
	ЦентральныйУзелОбмена = ПланыОбмена.Мобильные.НайтиПоКоду("001");
    Если ЦентральныйУзелОбмена.Пустая() Тогда
        
        НовыйУзел = ПланыОбмена.Мобильные.СоздатьУзел();
    	НовыйУзел.Код="001";
    	НовыйУзел.Наименование="Центральный";
    	НовыйУзел.Записать();
        ЦентральныйУзелОбмена = НовыйУзел.Ссылка;
        
    КонецЕсли;
    
	Узел = ПланыОбмена.Мобильные.ЭтотУзел();
    // Инициализируем обмен, проверяем, есть ли нужный узел в плане обмена.
    НовыйКод = ОсновнойСервер.ОбменМобильныеВызовПК.НачатьОбмен(Узел.Код,
										                       НаименованиеУзла,
										                       ЦентральныйУзелОбмена.НомерПринятого,
										                       ЦентральныйУзелОбмена.НомерОтправленного);
	
    Если  Узел.Код <> НовыйКод Тогда
        
		ОбъектУзла = Узел.ПолучитьОбъект();
		ОбъектУзла.Код = НовыйКод;
        ОбъектУзла.Наименование = НаименованиеУзла;
		ОбъектУзла.Записать();
        
    КонецЕсли;
		
	Константы.ОтправленоЗаписей.Установить(0);
	Константы.ПринятоЗаписей.Установить(0);
    ДанныеОбмена = ОбменМобильныеОбщее.СформироватьПакетОбмена(ЦентральныйУзелОбмена);
	ДанныеОбмена = ОсновнойСервер.ОбменМобильныеВызовПК.ВыполнитьОбменДанными(Узел.Код, ДанныеОбмена);
    ОбменМобильныеОбщее.ПринятьПакетОбмена(ЦентральныйУзелОбмена, ДанныеОбмена);
    
КонецПроцедуры

// Функция проверки завершенности фонового задания
// Функция анализирует состояние фонового задания и информацию
// о возникших ошибках
//
// Параметры:
//  Идентификатор - идентификатор фонового задания
//  ТекстОшибки - параметр для возврата информации об ошибках
//
// Возвращаемое значение:
//  Истина, если задание завершено
//
Функция ОбменДаннымиЗакончен(Идентификатор, ТекстОшибки) Экспорт
	
	ТекстОшибки = "";
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Идентификатор);
	Если Задание = Неопределено Тогда
		Возврат Истина; // вероятно уже вытеснено из памяти
	КонецЕсли;
	Если Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
		Возврат Ложь;
	КонецЕсли;
	Если Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		ТекстОшибки = Задание.ИнформацияОбОшибке.Описание;
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

// Функция запускает фоновое задание для синхронизации данных
// Возвращаемое значение:
//  идентификатор фонового задания
//
Функция ВыполнитьОбменДаннымиВФоне() Экспорт
	
	Задание = ФоновыеЗадания.Выполнить("ОбменМобильныеАвтономныйСервер.ВыполнитьОбменДанными",,, "Синхронизация");
	Возврат Задание.УникальныйИдентификатор;
	
КонецФункции
#КонецЕсли
